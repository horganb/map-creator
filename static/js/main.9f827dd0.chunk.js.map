{"version":3,"sources":["utils.js","dataAccess/mapServer.js","styles.js","PinCard.jsx","MapImage.jsx","dataAccess/googleCloudUpload.js","MapPage.jsx","dataAccess/utils.js","dataAccess/hooks/useObject.js","dataAccess/hooks/useMap.js","MapViewer.jsx","dataAccess/initialData.js","MapList.jsx","App.jsx","index.js"],"names":["getPosition","el","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","mapsUrl","rawCookies","document","cookie","token","parse","generateId","expires","Date","setFullYear","getFullYear","serialize","mapServer","axios","create","baseURL","headers","Authorization","VerticalLayoutWrapper","styled","backgroundColor","height","width","display","flexDirection","fontSize","color","PaddedButton","Button","margin","PaddedToggleButton","ToggleButton","padding","MapButton","MapListContainer","alignItems","EvenToolbar","Toolbar","justifyContent","MapNameField","TextField","HiddenFileInput","AddImageIcon","AddPhotoAlternate","marginRight","PageToolbar","minHeight","PageList","ToggleButtonGroup","overflow","ViewerHint","LeftPageArrow","ArrowBackIos","position","cursor","RightPageArrow","ArrowForwardIos","right","MapPageContent","flex","alignSelf","PinCardWrapper","StyledPin","AddCircle","transition","WebkitTapHighlightColor","MapImg","maxWidth","maxHeight","PinCardField","DescriptionCard","Card","PinCardHeader","CardHeader","paddingBottom","textAlign","PinCardContent","CardContent","paddingTop","DescriptionHeader","textTransform","opacity","DescriptionBody","fontFamily","PinCard","pin","setPin","onClose","isEditor","title","description","cardTitle","label","value","onChange","e","target","cardContent","variant","multiline","rows","style","action","IconButton","onClick","MapImage","fileId","pageControls","selectedPin","setSelectedPin","contentRef","imageId","pins","setPins","useState","imagePosition","setImagePosition","imageLoading","setImageLoading","pinRefs","useRef","imageRef","dragging","imageSrc","useEffect","updateImagePosition","current","offsetLeft","offsetTop","observer","ResizeObserver","observe","disconnect","getPinCoords","mouseEvent","element","x","pageX","y","pageY","getRelativeCoords","relativeX","relativeY","Object","keys","map","pinId","pinData","isSelected","modifyPin","modifications","persist","newPinPosition","imageWidth","imageHeight","pinLeft","pinTop","transform","onPinClick","onContextMenu","preventDefault","otherPins","onPinRightClick","ref","onMouseDown","startX","clientX","startY","clientY","onmousemove","xDiff","yDiff","pinCoords","getPinLocation","rawX","rawY","finalX","finalY","onmouseup","setTimeout","CircularProgress","src","id","addPin","alt","onLoad","MapPage","newData","defaultProps","UpdateMethods","updateFieldValue","method","object","pathString","pathArray","split","val","forEach","fieldName","index","length","push","useObject","apiUrl","data","setData","error","setError","loading","setLoading","get","then","catch","console","updateData","useCallback","updates","updateObject","put","getProperty","defaultValue","path","getFieldValue","updateValue","newValue","oldValue","oldVal","newVal","cloneDeep","useMap","mapId","mapData","mapName","setMapName","pageOrder","setPageOrder","updatePageOrder","updateMap","pageData","setPageData","getPageControls","pageId","pagePath","setImageId","pageName","setPageName","MapViewer","useParams","history","useHistory","loadError","authError","authToken","owner","currentPage","setCurrentPage","displayData","pageButtons","name","image","addPage","header","AppBar","type","accept","files","file","formData","FormData","append","post","res","uploadFile","htmlFor","component","exclusive","currentPageIndex","indexOf","getContent","MapList","goToMap","mapLinks","_id","pages","order","getInitialMapData","App","basename","exact","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f827dd0.chunk.js","sourcesContent":["/** Returns a unique ID. */\r\nexport { v4 as generateId } from 'uuid';\r\n\r\n/** Returns the absolute position of an element on the page. */\r\nexport const getPosition = el => {\r\n  const rect = el.getBoundingClientRect();\r\n  return {\r\n    left: rect.left + window.scrollX,\r\n    top: rect.top + window.scrollY,\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport cookie from 'cookie';\r\nimport { generateId } from '../utils';\r\n\r\n// export const mapsUrl = 'http://localhost:3000/';\r\n// export const mapsUrl = 'http://192.168.37.94:3000/';\r\nexport const mapsUrl = 'https://map-creator-backend.herokuapp.com/';\r\n\r\nconst rawCookies = document.cookie;\r\nconst cookies = cookie.parse(rawCookies);\r\n\r\nlet token = cookies.token;\r\nif (!token) {\r\n  token = generateId();\r\n  const expires = new Date();\r\n  expires.setFullYear(expires.getFullYear() + 100); // Expire in 100 years\r\n  document.cookie = cookie.serialize('token', token, { expires });\r\n}\r\n\r\nexport { token as authToken };\r\n\r\nconst mapServer = axios.create({\r\n  baseURL: mapsUrl,\r\n  headers: {\r\n    Authorization: token,\r\n  },\r\n});\r\n\r\nexport default mapServer;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport {\r\n  AddCircle,\r\n  AddPhotoAlternate,\r\n  ArrowBackIos,\r\n  ArrowForwardIos,\r\n} from '@material-ui/icons';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\n// General\r\n\r\nexport const VerticalLayoutWrapper = styled('div')({\r\n  backgroundColor: 'white',\r\n  height: '100%',\r\n  width: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  fontSize: 'calc(10px + 2vmin)',\r\n  color: 'gray',\r\n});\r\n\r\nexport const PaddedButton = styled(Button)({\r\n  margin: '1rem',\r\n});\r\n\r\nexport const PaddedToggleButton = styled(ToggleButton)({\r\n  padding: '0.25rem 0.5rem',\r\n});\r\n\r\n// MapList\r\n\r\nexport const MapButton = styled(Button)({\r\n  padding: '0.5rem 2rem',\r\n  margin: '0.5rem',\r\n});\r\n\r\nexport const MapListContainer = styled(VerticalLayoutWrapper)({\r\n  alignItems: 'center',\r\n});\r\n\r\n// MapViewer\r\n\r\nexport const EvenToolbar = styled(Toolbar)({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n});\r\n\r\nexport const MapNameField = styled(TextField)({\r\n  margin: '0.5rem',\r\n});\r\n\r\nexport const HiddenFileInput = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nexport const AddImageIcon = styled(AddPhotoAlternate)({\r\n  marginRight: '0.5rem',\r\n});\r\n\r\nexport const PageToolbar = styled(Toolbar)({\r\n  backgroundColor: 'pink',\r\n  minHeight: 'auto',\r\n});\r\n\r\nexport const PageList = styled(ToggleButtonGroup)({\r\n  display: 'flex',\r\n  margin: '8px 0',\r\n  overflow: 'auto',\r\n});\r\n\r\nexport const ViewerHint = styled(Toolbar)({\r\n  justifyContent: 'center',\r\n});\r\n\r\nexport const LeftPageArrow = styled(ArrowBackIos)({\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '0.5rem',\r\n  cursor: 'pointer',\r\n});\r\n\r\nexport const RightPageArrow = styled(ArrowForwardIos)({\r\n  position: 'absolute',\r\n  top: '50%',\r\n  right: '0.5rem',\r\n  cursor: 'pointer',\r\n});\r\n\r\n// MapPage\r\n\r\nexport const MapPageContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  position: 'relative',\r\n  minHeight: 0,\r\n  width: 'calc(100% - 4rem)',\r\n  alignSelf: 'center',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n});\r\n\r\nexport const PinCardWrapper = styled('div')({\r\n  flex: '0 0 auto',\r\n  minHeight: 0,\r\n});\r\n\r\n// MapImage\r\n\r\nexport const StyledPin = styled(AddCircle)({\r\n  position: 'absolute',\r\n  cursor: 'pointer',\r\n  transition: 'transform 0.2s',\r\n  WebkitTapHighlightColor: 'rgba(255, 255, 255, 0)',\r\n  padding: '0.5rem',\r\n});\r\n\r\nexport const MapImg = styled('img')({\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n});\r\n\r\n// PinCard\r\n\r\nexport const PinCardField = styled(TextField)({\r\n  width: '100%',\r\n});\r\n\r\nexport const DescriptionCard = styled(Card)({\r\n  transition: 'opacity 0.2s',\r\n});\r\n\r\nexport const PinCardHeader = styled(CardHeader)({\r\n  paddingBottom: 0,\r\n  textAlign: 'left',\r\n});\r\n\r\nexport const PinCardContent = styled(CardContent)({\r\n  paddingTop: 0,\r\n  textAlign: 'left',\r\n  overflow: 'auto',\r\n  height: '5rem',\r\n});\r\n\r\nexport const DescriptionHeader = styled('h5')({\r\n  textTransform: 'uppercase',\r\n  opacity: 0.5,\r\n  margin: 0,\r\n  fontSize: '1.4rem',\r\n});\r\n\r\nexport const DescriptionBody = styled('p')({\r\n  margin: 0,\r\n  fontSize: '1.2rem',\r\n  fontFamily: 'Arial',\r\n});\r\n","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  DescriptionBody,\r\n  DescriptionCard,\r\n  DescriptionHeader,\r\n  PinCardContent,\r\n  PinCardField,\r\n  PinCardHeader,\r\n} from './styles';\r\n\r\n/** A card for displaying/editing data about a specific pin. */\r\nconst PinCard = ({ pin, setPin, onClose, isEditor }) => {\r\n  const { title, description } = pin || {};\r\n\r\n  const cardTitle = isEditor ? (\r\n    <PinCardField\r\n      label=\"Item Title\"\r\n      value={title || ''}\r\n      onChange={e => setPin({ ...pin, title: e.target.value })}\r\n    />\r\n  ) : (\r\n    <DescriptionHeader>{title}</DescriptionHeader>\r\n  );\r\n\r\n  const cardContent = isEditor ? (\r\n    <PinCardField\r\n      label=\"Item Description\"\r\n      value={description || ''}\r\n      onChange={e => setPin({ ...pin, description: e.target.value })}\r\n      variant=\"outlined\"\r\n      multiline\r\n      rows={3}\r\n    />\r\n  ) : (\r\n    <DescriptionBody>{description}</DescriptionBody>\r\n  );\r\n\r\n  return (\r\n    <DescriptionCard style={{ opacity: pin ? 1 : 0 }}>\r\n      <PinCardHeader\r\n        title={cardTitle}\r\n        action={\r\n          <IconButton onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <PinCardContent>{cardContent}</PinCardContent>\r\n    </DescriptionCard>\r\n  );\r\n};\r\n\r\nexport default PinCard;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { getImageUrl } from './dataAccess/googleCloudUpload';\r\nimport { generateId, getPosition } from './utils';\r\n// import AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { StyledPin, MapImg } from './styles';\r\n\r\nconst MapImage = ({\r\n  isEditor,\r\n  pageControls,\r\n  selectedPin,\r\n  setSelectedPin,\r\n  contentRef,\r\n}) => {\r\n  const { imageId, pins, setPins } = pageControls;\r\n\r\n  const [imagePosition, setImagePosition] = useState();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n\r\n  const pinRefs = useRef({});\r\n  const imageRef = useRef();\r\n  const dragging = useRef(false);\r\n\r\n  const imageSrc = imageId && getImageUrl(imageId);\r\n\r\n  useEffect(() => {\r\n    setImageLoading(true);\r\n  }, [imageSrc]);\r\n\r\n  useEffect(() => {\r\n    if (!imageLoading) {\r\n      updateImagePosition();\r\n    }\r\n  }, [imageLoading]);\r\n\r\n  const updateImagePosition = () => {\r\n    if (imageRef.current) {\r\n      const { offsetLeft, offsetTop, width, height } = imageRef.current;\r\n      setImagePosition({ offsetLeft, offsetTop, width, height });\r\n    }\r\n  };\r\n\r\n  // When the content is resized, recalculate image dimensions and position\r\n  useEffect(() => {\r\n    if (!contentRef.current) return;\r\n    const observer = new ResizeObserver(() => {\r\n      updateImagePosition();\r\n    }).observe(contentRef.current);\r\n    return () => {\r\n      observer?.disconnect();\r\n    };\r\n  }, [contentRef.current, imageRef.current]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onPinClick = pinId => {\r\n    !dragging.current && setSelectedPin(pinId === selectedPin ? null : pinId);\r\n  };\r\n\r\n  const addPin = (x, y) => {\r\n    const id = generateId();\r\n    setPins({\r\n      ...pins,\r\n      [id]: { x, y },\r\n    });\r\n  };\r\n\r\n  const getRelativeCoords = (mouseEvent, element) => {\r\n    const { left, top } = getPosition(element);\r\n    const x = mouseEvent.pageX - left;\r\n    const y = mouseEvent.pageY - top;\r\n    return { x, y };\r\n  };\r\n\r\n  const getPinCoords = mouseEvent => {\r\n    const { x: relativeX, y: relativeY } = getRelativeCoords(\r\n      mouseEvent,\r\n      imageRef.current\r\n    );\r\n    const x = relativeX / imageRef.current.width;\r\n    const y = relativeY / imageRef.current.height;\r\n    return { x, y };\r\n  };\r\n\r\n  /** Reverse of getPinCoords */\r\n  const getPinLocation = pinCoords => {\r\n    const { left, top } = getPosition(imageRef.current);\r\n    const relativeX = pinCoords.x * imageRef.current.width;\r\n    const relativeY = pinCoords.y * imageRef.current.height;\r\n    const x = relativeX + left;\r\n    const y = relativeY + top;\r\n    return { x, y };\r\n  };\r\n\r\n  const onImageClick = e => {\r\n    if (isEditor) {\r\n      const { x, y } = getPinCoords(e);\r\n      addPin(x, y);\r\n    }\r\n  };\r\n\r\n  const onPinRightClick = (pinId, e) => {\r\n    if (isEditor) {\r\n      e.preventDefault();\r\n      const { [pinId]: _, ...otherPins } = pins;\r\n      setPins(otherPins);\r\n      setSelectedPin();\r\n    }\r\n  };\r\n\r\n  const renderPins = () =>\r\n    imagePosition &&\r\n    Object.keys(pins).map(pinId => {\r\n      const pinData = pins[pinId];\r\n      if (!pinData) return undefined;\r\n      const { x, y } = pinData;\r\n      const isSelected = selectedPin === pinId;\r\n\r\n      const refCallback = el => {\r\n        if (pinRefs?.current) {\r\n          pinRefs.current[pinId] = el;\r\n        }\r\n      };\r\n\r\n      const modifyPin = (modifications, persist = true) => {\r\n        setPins(\r\n          {\r\n            ...pins,\r\n            [pinId]: {\r\n              ...pins[pinId],\r\n              ...modifications,\r\n            },\r\n          },\r\n          persist\r\n        );\r\n      };\r\n\r\n      let newPinPosition = {};\r\n\r\n      const startDrag = e => {\r\n        const { clientX: startX, clientY: startY } = e;\r\n        document.onmousemove = e => {\r\n          dragging.current = true;\r\n          const xDiff = e.clientX - startX;\r\n          const yDiff = e.clientY - startY;\r\n          const { x: rawX, y: rawY } = getPinLocation({ x, y });\r\n          const coordObject = {\r\n            pageX: rawX + xDiff,\r\n            pageY: rawY + yDiff,\r\n          };\r\n          const { x: finalX, y: finalY } = getPinCoords(coordObject);\r\n          newPinPosition = { x: finalX, y: finalY };\r\n          modifyPin(newPinPosition, false);\r\n        };\r\n        document.onmouseup = e => {\r\n          modifyPin(newPinPosition, true);\r\n          document.onmousemove = null;\r\n          document.onmouseup = null;\r\n          setTimeout(() => {\r\n            dragging.current = false;\r\n          }, 0);\r\n        };\r\n      };\r\n\r\n      const {\r\n        offsetLeft,\r\n        offsetTop,\r\n        width: imageWidth,\r\n        height: imageHeight,\r\n      } = imagePosition;\r\n\r\n      const pinLeft = offsetLeft + x * imageWidth;\r\n      const pinTop = offsetTop + y * imageHeight;\r\n\r\n      return (\r\n        <StyledPin\r\n          key={pinId}\r\n          style={{\r\n            left: `${pinLeft}px`,\r\n            top: `${pinTop}px`,\r\n            color: isSelected ? 'rgb(61, 161, 143)' : 'rgb(37, 247, 209)',\r\n            transform: `translateX(-50%) translateY(-50%)${\r\n              isSelected ? 'scale(1.3)' : 'scale(1)'\r\n            }`,\r\n          }}\r\n          onClick={() => onPinClick(pinId)}\r\n          onContextMenu={e => onPinRightClick(pinId, e)}\r\n          ref={refCallback}\r\n          onMouseDown={startDrag}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {!imageLoading && renderPins()}\r\n      {imageLoading && <CircularProgress />}\r\n      <MapImg\r\n        src={imageSrc}\r\n        onClick={onImageClick}\r\n        alt=\"Map Page\"\r\n        ref={imageRef}\r\n        onLoad={() => setImageLoading(false)}\r\n        style={imageLoading ? { display: 'none' } : {}}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapImage;\r\n","import mapServer, { mapsUrl } from './mapServer';\r\n\r\nexport const uploadFile = files => {\r\n  const file = files?.[0];\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  return mapServer\r\n    .post(`image`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    .then(res => {\r\n      return res.data;\r\n    });\r\n};\r\n\r\nexport const getImageUrl = fileId => {\r\n  return `${mapsUrl}image/${fileId}`;\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PinCard from './PinCard';\r\nimport MapImage from './MapImage';\r\nimport { MapPageContent, PinCardWrapper } from './styles';\r\n\r\n/** A single page of a map. */\r\nconst MapPage = ({ pageControls, isEditor }) => {\r\n  const { imageId, pins, setPins } = pageControls;\r\n\r\n  const [selectedPin, setSelectedPin] = useState();\r\n\r\n  const contentRef = useRef();\r\n\r\n  const pinData = pins[selectedPin];\r\n\r\n  return (\r\n    <>\r\n      <MapPageContent ref={contentRef}>\r\n        {imageId ? (\r\n          <MapImage\r\n            isEditor={isEditor}\r\n            pageControls={pageControls}\r\n            selectedPin={selectedPin}\r\n            setSelectedPin={setSelectedPin}\r\n            contentRef={contentRef}\r\n          />\r\n        ) : (\r\n          <div>\r\n            Here's how to get started creating your map:\r\n            <br />\r\n            <br />\r\n            1. Choose an image using the upload button above\r\n            <br />\r\n            2. Click on the image to add tags\r\n            <br />\r\n            3. Click on the tags to edit them\r\n          </div>\r\n        )}\r\n      </MapPageContent>\r\n      <PinCardWrapper>\r\n        <PinCard\r\n          pin={pinData}\r\n          onClose={() => setSelectedPin()}\r\n          setPin={newData => {\r\n            setPins({\r\n              ...pins,\r\n              [selectedPin]: newData,\r\n            });\r\n          }}\r\n          isEditor={isEditor}\r\n        />\r\n      </PinCardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nMapPage.propTypes = {\r\n  isEditor: PropTypes.bool,\r\n};\r\n\r\nMapPage.defaultProps = {\r\n  isEditor: true,\r\n};\r\n\r\nexport default MapPage;\r\n","export const UpdateMethods = {\r\n  SET: '$set',\r\n  UNSET: '$unset',\r\n  PUSH: '$push',\r\n  PULL: '$pull',\r\n};\r\n\r\n/** Given an object and a dot-separated path, return the value at the path in the object */\r\nexport const getFieldValue = (object, pathString) => {\r\n  const pathArray = pathString.split('.');\r\n  let val = object;\r\n  pathArray.forEach(fieldName => {\r\n    val = val?.[fieldName];\r\n  });\r\n  return val;\r\n};\r\n\r\n/** Given an object, a dot-separated path, and an update method, update the field at the path. */\r\nexport const updateFieldValue = (method, object, pathString, value) => {\r\n  const pathArray = pathString.split('.');\r\n  let val = object;\r\n  pathArray.forEach((fieldName, index) => {\r\n    if (index === pathArray.length - 1) {\r\n      // at last field\r\n      switch (method) {\r\n        case UpdateMethods.SET:\r\n          val[fieldName] = value;\r\n          break;\r\n        case UpdateMethods.UNSET:\r\n          delete val[fieldName];\r\n          break;\r\n        case UpdateMethods.PUSH:\r\n          if (!val[fieldName]) {\r\n            val[fieldName] = [];\r\n          }\r\n          val[fieldName].push(value);\r\n          break;\r\n        case UpdateMethods.PULL:\r\n          if (!val[fieldName]) {\r\n            val[fieldName] = [];\r\n          }\r\n          val[fieldName].push(value);\r\n          break;\r\n        default:\r\n          // invalid update\r\n          break;\r\n      }\r\n    } else {\r\n      if (!val[fieldName]) {\r\n        val[fieldName] = {};\r\n      }\r\n      val = val[fieldName];\r\n    }\r\n  });\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport mapServer from '../mapServer';\r\nimport { getFieldValue, updateFieldValue, UpdateMethods } from '../utils';\r\n\r\n/** Returns read/write controls for a chunk of data. */\r\nconst useObject = apiUrl => {\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    mapServer\r\n      .get(apiUrl)\r\n      .then(({ data }) => {\r\n        setError(false);\r\n        setData(data);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n        setError(true);\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [apiUrl]);\r\n\r\n  const updateData = useCallback(\r\n    (updates, method = UpdateMethods.SET) => {\r\n      const updateObject = {\r\n        [method]: updates,\r\n      };\r\n      return mapServer.put(apiUrl, updateObject);\r\n    },\r\n    [apiUrl]\r\n  );\r\n\r\n  /** Returns controls for a specific sub-object. */\r\n  const getProperty = (defaultValue, path) => {\r\n    const value = getFieldValue(data, path) ?? defaultValue;\r\n\r\n    const updateValue = (method, newValue, persist = true) => {\r\n      const oldValue = value;\r\n      setData(oldVal => {\r\n        const newVal = cloneDeep(oldVal);\r\n        updateFieldValue(method, newVal, path, newValue);\r\n        return newVal;\r\n      });\r\n      if (persist) {\r\n        updateData(\r\n          {\r\n            [path]: newValue,\r\n          },\r\n          method\r\n        ).catch(e => {\r\n          console.error(e);\r\n          // Update failed - revert to previous local data\r\n          setData(oldVal => {\r\n            const newVal = cloneDeep(oldVal);\r\n            updateFieldValue(method, newVal, path, oldValue);\r\n            return newVal;\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n    const setValue = (newValue, persist = true) => {\r\n      updateValue(UpdateMethods.SET, newValue, persist);\r\n    };\r\n\r\n    return [value, setValue, updateValue];\r\n  };\r\n\r\n  return {\r\n    data,\r\n    updateData,\r\n    getProperty,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useObject;\r\n","import useObject from './useObject';\r\n\r\n/** Read/write controls for a single map. */\r\nconst useMap = mapId => {\r\n  const {\r\n    data: mapData,\r\n    updateData,\r\n    getProperty,\r\n    error,\r\n    loading,\r\n  } = useObject(`maps/${mapId}`);\r\n\r\n  const [mapName, setMapName] = getProperty('Untitled Map', 'name');\r\n  const [pageOrder, setPageOrder, updatePageOrder] = getProperty(\r\n    [],\r\n    'pages.order'\r\n  );\r\n  const [pageData, setPageData] = getProperty({}, 'pages.data');\r\n\r\n  const getPageControls = pageId => {\r\n    const pagePath = `pages.data.${pageId}`;\r\n    const [pageData, setPageData] = getProperty({}, pagePath);\r\n    const [imageId, setImageId] = getProperty('', `${pagePath}.imageId`);\r\n    const [pageName, setPageName] = getProperty('', `${pagePath}.name`);\r\n    const [pins, setPins] = getProperty({}, `${pagePath}.pins`);\r\n\r\n    return {\r\n      pageData,\r\n      setPageData,\r\n      imageId,\r\n      setImageId,\r\n      pageName,\r\n      setPageName,\r\n      pins,\r\n      setPins,\r\n    };\r\n  };\r\n\r\n  return {\r\n    mapData,\r\n    updateMap: updateData,\r\n    mapName,\r\n    setMapName,\r\n    pageOrder,\r\n    pageData,\r\n    setPageData,\r\n    setPageOrder,\r\n    updatePageOrder,\r\n    getPageControls,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useMap;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Button, CircularProgress, AppBar } from '@material-ui/core';\r\nimport { uploadFile } from './dataAccess/googleCloudUpload';\r\nimport MapPage from './MapPage';\r\nimport useMap from './dataAccess/hooks/useMap';\r\nimport { UpdateMethods } from './dataAccess/utils';\r\nimport {\r\n  AddImageIcon,\r\n  EvenToolbar,\r\n  HiddenFileInput,\r\n  LeftPageArrow,\r\n  MapNameField,\r\n  PaddedButton,\r\n  PaddedToggleButton,\r\n  PageList,\r\n  PageToolbar,\r\n  RightPageArrow,\r\n  VerticalLayoutWrapper,\r\n  ViewerHint,\r\n} from './styles';\r\nimport { generateId } from './utils';\r\nimport { getInitialPageData } from './dataAccess/initialData';\r\nimport { authToken } from './dataAccess/mapServer';\r\n\r\n/** A component for editing or viewing a single map. */\r\nconst MapViewer = ({ isEditor }) => {\r\n  const { mapId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    mapData,\r\n    mapName,\r\n    setMapName,\r\n    pageOrder,\r\n    updatePageOrder,\r\n    getPageControls,\r\n    error: loadError,\r\n    loading,\r\n  } = useMap(mapId);\r\n\r\n  const authError = isEditor && !loading && authToken !== mapData?.owner;\r\n  const error = loadError || authError;\r\n\r\n  const [currentPage, setCurrentPage] = useState();\r\n\r\n  const goHome = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const viewMap = () => {\r\n    history.push(`/maps/${mapId}/view`);\r\n  };\r\n\r\n  const displayData = !loading && !error;\r\n\r\n  useEffect(() => {\r\n    if (displayData && !currentPage) {\r\n      setCurrentPage(pageOrder[0]);\r\n    }\r\n  }, [displayData, currentPage, pageOrder]);\r\n\r\n  const handlePageChange = (e, id) => {\r\n    setCurrentPage(id);\r\n  };\r\n\r\n  const addPage = () => {\r\n    const pageId = generateId();\r\n    const pageData = getInitialPageData();\r\n    const { setPageData } = getPageControls(pageId);\r\n\r\n    setPageData(pageData);\r\n    updatePageOrder(UpdateMethods.PUSH, pageId);\r\n    setCurrentPage(pageId);\r\n  };\r\n\r\n  const pageButtons = pageOrder.map((pageId, index) => {\r\n    const { pageName } = getPageControls(pageId); // TODO: use custom page names, and add rename feature\r\n    return (\r\n      <PaddedToggleButton key={pageId} value={pageId}>\r\n        {`Page ${index + 1}`}\r\n      </PaddedToggleButton>\r\n    );\r\n  });\r\n\r\n  isEditor &&\r\n    pageButtons.push(\r\n      <PaddedToggleButton\r\n        key=\"add\"\r\n        value=\"add\"\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          addPage();\r\n        }}\r\n      >\r\n        +\r\n      </PaddedToggleButton>\r\n    );\r\n\r\n  const onChooseFile = e => {\r\n    const { setImageId } = getPageControls(currentPage);\r\n\r\n    uploadFile(e.target.files)\r\n      .then(fileId => {\r\n        setImageId(fileId);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const header = (\r\n    <>\r\n      {isEditor && (\r\n        <AppBar position={'static'}>\r\n          <EvenToolbar>\r\n            <>\r\n              <PaddedButton\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={goHome}\r\n              >\r\n                Back to Home\r\n              </PaddedButton>\r\n            </>\r\n            {displayData && (\r\n              <>\r\n                <MapNameField\r\n                  label=\"Map Name\"\r\n                  value={mapName}\r\n                  onChange={e => setMapName(e.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div>\r\n                  <HiddenFileInput\r\n                    type=\"file\"\r\n                    id=\"file\"\r\n                    accept={'image/*'}\r\n                    onChange={onChooseFile}\r\n                  />\r\n                  <label htmlFor=\"file\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                    >\r\n                      <AddImageIcon />\r\n                      Upload\r\n                    </Button>\r\n                  </label>\r\n                  <PaddedButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={viewMap}\r\n                  >\r\n                    View Map\r\n                  </PaddedButton>\r\n                </div>\r\n              </>\r\n            )}\r\n          </EvenToolbar>\r\n        </AppBar>\r\n      )}\r\n      <PageToolbar>\r\n        <PageList value={currentPage} exclusive onChange={handlePageChange}>\r\n          {pageButtons}\r\n        </PageList>\r\n      </PageToolbar>\r\n      {!isEditor && (\r\n        <ViewerHint>Tap on an item to learn more about it.</ViewerHint>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const getContent = () => {\r\n    const pageControls = getPageControls(currentPage);\r\n    return (\r\n      <>\r\n        {pageOrder.length > 1 && (\r\n          <>\r\n            <LeftPageArrow\r\n              onClick={() => {\r\n                const currentPageIndex = pageOrder.indexOf(currentPage);\r\n                if (currentPageIndex === 0) {\r\n                  setCurrentPage(pageOrder[pageOrder.length - 1]);\r\n                } else {\r\n                  setCurrentPage(pageOrder[currentPageIndex - 1]);\r\n                }\r\n              }}\r\n            />\r\n            <RightPageArrow\r\n              onClick={() => {\r\n                const currentPageIndex = pageOrder.indexOf(currentPage);\r\n                if (currentPageIndex === pageOrder.length - 1) {\r\n                  setCurrentPage(pageOrder[0]);\r\n                } else {\r\n                  setCurrentPage(pageOrder[currentPageIndex + 1]);\r\n                }\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n        <MapPage pageControls={pageControls} isEditor={isEditor} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <VerticalLayoutWrapper>\r\n      {header}\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <p>Could not load the requested map!</p>\r\n      ) : (\r\n        getContent()\r\n      )}\r\n    </VerticalLayoutWrapper>\r\n  );\r\n};\r\n\r\nMapViewer.propTypes = {\r\n  /** Whether the map can be edited. */\r\n  isEditor: PropTypes.bool,\r\n};\r\n\r\nMapViewer.defaultProps = {\r\n  isEditor: true,\r\n};\r\n\r\nexport default MapViewer;\r\n","import { generateId } from '../utils';\r\n\r\nexport const getInitialPageData = () => ({\r\n  name: 'Untitled Page',\r\n  image: {\r\n    id: '0c1de8f8-c585-4d4a-b5b2-75c8632027b6.jpg',\r\n  },\r\n  pins: {},\r\n});\r\n\r\nexport const getInitialMapData = () => {\r\n  const pageId = generateId();\r\n  return {\r\n    name: 'Untitled Map',\r\n    pages: {\r\n      order: [pageId],\r\n      data: {\r\n        [pageId]: getInitialPageData(),\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport mapServer from './dataAccess/mapServer';\r\nimport useObject from './dataAccess/hooks/useObject';\r\nimport { MapButton, MapListContainer } from './styles';\r\nimport { getInitialMapData } from './dataAccess/initialData';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n/** A list of the current user's maps. */\r\nconst MapList = () => {\r\n  const history = useHistory();\r\n\r\n  const { loading, error, data: maps = [] } = useObject('maps');\r\n\r\n  const goToMap = mapId => {\r\n    history.push(`/maps/${mapId}`);\r\n  };\r\n\r\n  const mapLinks = maps.map(({ name, _id }) => {\r\n    return (\r\n      <MapButton key={_id} variant=\"contained\" onClick={() => goToMap(_id)}>\r\n        {name}\r\n      </MapButton>\r\n    );\r\n  });\r\n\r\n  const newMap = () => {\r\n    mapServer\r\n      .post('maps', getInitialMapData())\r\n      .then(({ data }) => {\r\n        goToMap(data);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MapListContainer>\r\n      <MapButton variant=\"contained\" color=\"primary\" onClick={newMap}>\r\n        Create New Map\r\n      </MapButton>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <p>Could not load maps!</p>\r\n      ) : mapLinks.length === 0 ? (\r\n        <div>To get started, just click \"Create New Map\"!</div>\r\n      ) : (\r\n        mapLinks\r\n      )}\r\n    </MapListContainer>\r\n  );\r\n};\r\n\r\nexport default MapList;\r\n","import './App.css';\nimport React from 'react';\nimport { Route, Redirect, Switch, HashRouter } from 'react-router-dom';\nimport MapViewer from './MapViewer';\nimport MapList from './MapList';\n\n/** Routing for the app. */\nconst App = () => {\n  return (\n    <HashRouter basename={'/'}>\n      <Switch>\n        <Route exact path={'/'}>\n          <MapList />\n        </Route>\n        <Route path={'/maps/:mapId/view'}>\n          <MapViewer isEditor={false} />\n        </Route>\n        <Route path={'/maps/:mapId'}>\n          <MapViewer isEditor={true} />\n        </Route>\n        <Redirect to={'/'} />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}